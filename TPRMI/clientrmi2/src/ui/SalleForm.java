/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import dao.IDao;
import entities.Machine;
import entities.Salle;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.security.Provider.Service;
import java.sql.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Lachgar
 */
public class SalleForm extends javax.swing.JInternalFrame {
    IDao<Machine> dao= null;
   IDao<Salle> daoo= null;
    DefaultTableModel model = null;
    static int id = 0;
    public static String f;
    Service s;
    Machine m;
    /**
     * Creates new form ServiceForm
     */
    public SalleForm() {
        try {
            initComponents();
            model = (DefaultTableModel) Sallelist.getModel();
            dao= (IDao<Machine>) Naming.lookup("rmi://localhost:1099/dao");
            daoo= (IDao<Salle>) Naming.lookup("rmi://localhost:1099/dao");
            m =new Machine();
            s = new Salle();
            load();
        } catch (NotBoundException ex) {
            Logger.getLogger(SalleForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(SalleForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(SalleForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void load() throws RemoteException{
        model.setRowCount(0);
        for(Salle s : daoo.findAll()){
            model.addRow(new Object[]{
                s.getId(),
                s.getCode()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        txtCode = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        deleteService = new javax.swing.JButton();
        updateService = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Sallelist = new javax.swing.JTable();

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Liste des services"));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 661, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );

        jPanel2.getAccessibleContext().setAccessibleName("Liste des salles");
        jPanel2.getAccessibleContext().setAccessibleDescription("");

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Gestion des salles");

        txtCode.setBackground(new java.awt.Color(255, 255, 255));
        txtCode.setBorder(javax.swing.BorderFactory.createTitledBorder("Formulaire"));

        jLabel1.setText("Nom : ");

        add.setText("Ajouter");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout txtCodeLayout = new javax.swing.GroupLayout(txtCode);
        txtCode.setLayout(txtCodeLayout);
        txtCodeLayout.setHorizontalGroup(
            txtCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txtCodeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(add)
                .addContainerGap())
        );
        txtCodeLayout.setVerticalGroup(
            txtCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txtCodeLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(txtCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        deleteService.setText("Supprimer");
        deleteService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteServiceActionPerformed(evt);
            }
        });

        updateService.setText("Modifier");
        updateService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateServiceActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        Sallelist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nom"
            }
        ));
        Sallelist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SallelistMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Sallelist);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 235, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(updateService, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteService))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(updateService)
                        .addGap(18, 18, 18)
                        .addComponent(deleteService)))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.getAccessibleContext().setAccessibleName("Liste des salles");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        String nom = txtCode.getText().toString();
        dao.create(new Service(nom));
        model.setRowCount(0);
        try {
            load();
        } catch (RemoteException ex) {
            Logger.getLogger(SalleForm.class.getName()).log(Level.SEVERE, null, ex);
        }
          JOptionPane.showMessageDialog(this, "bien ajouté");
    }//GEN-LAST:event_addActionPerformed

    private void SallelistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SallelistMouseClicked
        // TODO add your handling code here:
        id = Integer.parseInt(Sallelist.getValueAt( Sallelist.getSelectedRow(), 0).toString());
        s=daoo.findById(id);
        txtNom.setText(s.getNom());
    }//GEN-LAST:event_SallelistMouseClicked

    private void deleteServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteServiceActionPerformed
        // TODO add your handling code here:
        int reponse = JOptionPane.showConfirmDialog(this, "Voulez vous vraiment supprimé cette salle ?");
        if(reponse == 0){
            if (dao.delete(dao.findById(id))) {
                try {
                    load();
                } catch (RemoteException ex) {
                    Logger.getLogger(SalleForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(this, "le service à été bien supprimé");
            } else {
                JOptionPane.showMessageDialog(this, "La suppression de ce service est interdite car il contient déjà des clients");
            }
        }
    }//GEN-LAST:event_deleteServiceActionPerformed

    private void updateServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateServiceActionPerformed
        // TODO add your handling code here:
         id = Integer.parseInt(model.getValueAt(Sallelist.getSelectedRow(), 0).toString());
        int reponse = JOptionPane.showConfirmDialog(this, "Voulez vous vraiment modifié salle ?");
        f = txtCode.getText();
        if(reponse == 0){
             try {
                 if (dao.update(dao.findById(id))) {
                     try {
                         load();
                     } catch (RemoteException ex) {
                         Logger.getLogger(SalleForm.class.getName()).log(Level.SEVERE, null, ex);
                     }
                     JOptionPane.showMessageDialog(this,"bien modifié");
                 }} catch (RemoteException ex) {
                 Logger.getLogger(SalleForm.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
    }//GEN-LAST:event_updateServiceActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Sallelist;
    private javax.swing.JButton add;
    private javax.swing.JButton deleteService;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel txtCode;
    private javax.swing.JTextField txtNom;
    private javax.swing.JButton updateService;
    // End of variables declaration//GEN-END:variables
}
